#include "LoadDll.h"

//------------------------------------------------------------------------
// коструктор
//------------------------------------------------------------------------
TLoadDll::TLoadDll(PCHAR DllName)
{
	// идентификатор модуля DLL
	hDll = ::LoadLibrary(DllName);
}

//------------------------------------------------------------------------
// деструктор
//------------------------------------------------------------------------
TLoadDll::~TLoadDll()
{
	::FreeLibrary(hDll);
}

//------------------------------------------------------------------------
// получение адреса функции возвращающей указатель на интерфейс модуля
//------------------------------------------------------------------------
LPVOID WINAPI TLoadDll::CallCreateLInstance(void)
{
	if(hDll == NULL) return NULL;
	return FARPROC(::GetProcAddress(hDll, "CreateLInstance"));
}

//------------------------------------------------------------------------
// получение адреса функции возвращающей версию DLL
//------------------------------------------------------------------------
LPVOID WINAPI TLoadDll::CallGetDllVersion(void)
{
	if(hDll == NULL) return NULL;
	return FARPROC(::GetProcAddress(hDll, "GetDllVersion"));
}

//------------------------------------------------------------------------
// получение идентификатора библиотеки
//------------------------------------------------------------------------
HINSTANCE WINAPI TLoadDll::GetDllHinstance(void)
{
	return hDll;
}

